"""edit models

Revision ID: a6a60602826b
Revises: 
Create Date: 2022-05-09 21:53:24.263437

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a6a60602826b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('downvotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('downvote', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('upvotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('upvote', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('roles')
    op.add_column('comments', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('comments', sa.Column('content', sa.Text(), nullable=True))
    op.drop_constraint('comments_user_id_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'users', ['user_id'], ['id'])
    op.drop_column('comments', 'pitch_title')
    op.drop_column('comments', 'pitch_id')
    op.drop_column('comments', 'identity')
    op.drop_column('comments', 'pitch_comment')
    op.add_column('users', sa.Column('id', sa.Integer(), nullable=False))
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_constraint('users_role_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'identity')
    op.drop_column('users', 'role_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('identity', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_foreign_key('users_role_id_fkey', 'users', 'roles', ['role_id'], ['identity'])
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'id')
    op.add_column('comments', sa.Column('pitch_comment', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('comments', sa.Column('identity', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('comments', sa.Column('pitch_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('comments', sa.Column('pitch_title', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key('comments_user_id_fkey', 'comments', 'users', ['user_id'], ['identity'])
    op.drop_column('comments', 'content')
    op.drop_column('comments', 'id')
    op.create_table('roles',
    sa.Column('identity', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('identity', name='roles_pkey')
    )
    op.drop_table('upvotes')
    op.drop_table('downvotes')
    # ### end Alembic commands ###
